{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerIdTime","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","handleDocumentContextMenu","event","preventDefault","handleDocumentClick","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,YAAc,EALhB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,YAAcE,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBACkBH,EAAUC,KAD5B,eACuCT,KAAKU,MAAMD,SAnBxD,kCAwBE,WACER,OAAOW,cAAcZ,KAAKD,eAzB9B,oBA4BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAMS,cAAcC,OAAO,IAAK,YAzC3C,GAA2BO,aCP3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAQX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAW,WAHf,EAcEC,0BAA4B,SAACC,GAC3BA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,KAhB9B,EAmBEK,oBAAsB,WACpB,EAAKtB,SAAS,CAAEiB,UAAU,KApB9B,uDAME,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe3B,KAAKsB,2BAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,qBACxCxB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,QAXP,oBAuBE,WACE,OACE,sBAAKF,UAAU,MAAf,UACE,6CACCb,KAAKJ,MAAMwB,UACV,cAAC,EAAD,CACEX,KAAMT,KAAKJ,MAAMyB,mBA7B7B,GAAyBP,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.aef9ab2c.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerIdTime = 0;\n\n  componentDidMount() {\n    this.timerIdTime = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(\n        `Renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdTime);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport type State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleDocumentContextMenu);\n    document.addEventListener('click', this.handleDocumentClick);\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  handleDocumentContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleDocumentClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock\n            name={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}